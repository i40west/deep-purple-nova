meta {
    -theme-interface-style: dark;
    -theme-vibrancy: false;
    -theme-accent-color: false;
}

/* Window styles */
meta.window {
    background-color: hsl(275, 100%, 11%);
    border-color: hsla(0, 0%, 100%, 0.1);
}
meta.titlebar {
    color: hsl(258, 17%, 85%);
    border-color: hsla(0, 0%, 20%, 0.2);
    background: linear-gradient(hsl(280, 100%, 22%), hsl(269, 100%, 11%));
}
meta.titlebar.inactive {
    background-color: hsl(280, 100%, 18%);
}

meta.button,
meta.document.button {
    background: linear-gradient(hsl(299, 83%, 41%), hsl(285, 83%, 30%));
    border: linear-gradient(hsl(299, 83%, 21%), hsl(285, 83%, 10%));
    color: white;
}
meta.button.highlighted,
meta.document.button.highlighted {
    background: linear-gradient(hsl(299, 83%, 31%), hsl(285, 83%, 20%));
    color: hsl(0,0%,80%);
}
meta.button.selected,
meta.document.button.selected {
    background: linear-gradient(hsl(299, 83%, 65%), hsl(285, 83%, 45%));
    color: white;
}
meta.button.highlighted.selected,
meta.document.button.highlighted.selected {
    background: linear-gradient(hsl(299, 83%, 50%), hsl(285, 83%, 35%));
    color: white;
}
meta.button.disabled,
meta.document.button.disabled {

}

meta.textfield,
meta.document.textfield {
    background-color: hsl(269, 100%, 5%);
    border-color: hsl(270, 50%, 60%);
}
meta.textfield.highlighted,
meta.document.textfield.highlighted {
    background-color: hsl(269, 100%, 12%);
    border-color: hsl(270, 50%, 70%);
}

/* Document styles */
meta.document {
    background-color: hsl(269, 100%, 9%);
    border-color: hsla(0, 0%, 100%, 0.1);
}

/* Text */
meta.text {
    color: hsl(85, 3%, 85%);
}
meta.text.invisible {
    color: hsla(210, 100%, 90%, 0.15);
}
meta.text.selected {
    background-color: hsl(247, 35%, 40%);
}

/* Cursor */
meta.cursor {
    color: white;
    background-color: hsl(270, 100%, 17%);
}

/* Indentation Guides */
meta.indentguide {
    border-color: hsla(220, 5%, 48%, 0.25);
}

/* Gutter */
meta.gutter {
    color: hsl(270, 50%, 50%);
}
meta.gutter.selected {
    background-color: hsl(210, 5%, 10%);
    color: hsl(299, 100%, 70%);
}


/* Syntax styles */
comment,
javascript.comment.block {
    color: hsl(226, 19%, 50%);
}
processing {
    color: hsl(270, 60%, 80%);
}
declaration {
    color: hsl(192, 40%, 75%);
}
bracket {
    color: hsl(50, 75%, 75%);
}
operator {
    color: hsl(300, 100%, 70%);
}
invalid {
}
link {
    color: hsl(210, 100%, 70%);
}

/* Keywords */
keyword {
    color: hsl(235, 100%, 80%);
}
keyword.modifier {
    font-style: italic;
    color: hsl(235, 100%, 80%);
}
keyword.condition {
    color: hsl(220, 100%, 75%);
}
keyword.construct {
    color: hsl(230, 100%, 87%);
}
keyword.statement {
    color: hsl(230, 100%, 84%);
}
keyword.self {
    color: hsl(260, 100%, 85%);
}
keyword.self.prefix {
    color: hsl(200, 100%, 60%);
}
keyword.perl.pragmas {
    color: hsl(32, 90%, 70%);
}

/* Values */
value.boolean {
    color: hsl(210, 100%, 70%);
}
value.null {
    color: hsl(210, 100%, 70%);
}
value.number {
    color: hsl(48, 70%, 60%);
}
value.entity {
    color: hsl(210, 100%, 70%);
}
value.symbol {
    color: hsl(210, 100%, 70%);
}

/* Identifiers */
identifier {
    color: hsl(290, 80%, 80%);
}
identifier.type {
    color: hsl(258, 80%, 78%);
}
identifier.constant {
    color: hsl(290, 80%, 77%);
}
identifier.global {
    color: hsl(290, 100%, 80%);
}
identifier.name {
    color: hsl(290, 80%, 77%);
}
identifier.variable {
    color: hsl(280, 60%, 70%);
}
identifier.constant.prefix,
identifier.global.prefix,
identifier.variable.prefix {
    color: hsl(280, 60%, 70%);
}
identifier.property {
    color: hsl(260, 75%, 80%);
}
identifier.property.prefix {
    color: hsl(250, 60%, 75%);
}
identifier.decorator,
identifier.function,
identifier.method {
    color: hsl(250, 100%, 77%);
}
identifier.key {
    color: hsl(270, 80%, 80%);
}
identifier.argument {
    color: hsl(270, 80%, 80%);
}
identifier.argument.prefix {
    color: hsl(240, 100%, 92%);
}
identifier.function.macro {
    color: hsl(29, 75%, 80%);
}
go.identifier.property.name {
    color: hsl(225, 85%, 80%);
}

/* Strings */
string {
    color: hsl(255, 100%, 85%);
}
string.delimiter {
    color: hsl(63, 70%, 60%);
}
string.escape {
    color: hsl(300, 100%, 70%);
}
string.key {
    color: hsl(255, 100%, 85%);
}
string-keyword {
}
string-template {
}
regex {
    color: hsl(295, 100%, 88%);
}
regex.escape {
    color: hsl(336, 100%, 75%);
}
cdata {
    color: hsl(210, 100%, 70%);
}

/* Markup */
markup.heading {
    color: hsl(27, 100%, 70%);
}
markup.line {
    color: hsl(295, 100%, 85%);
}
markup.bold {
    color: white;
    font-weight: bold;
}
markup.italic {
    color: white;
    font-style: italic;
}
markup.strikethrough {
    color: hsl(210, 20%, 50%);
}
markup.list.item {
    color: hsl(27, 100%, 70%);
}
markup.code,
heredoc {
    background-color: rgba(128, 128, 128, 0.1);
}
markup.link {
    color: hsl(210, 100%, 70%);
}

/* Types */
definition.class.name,
definition.type.name,
definition.package.name,
definition.enum.name,
definition.union.name,
definition.struct.name {

}

/* Members */
definition.property.name {
}
definition.function.name,
definition.method.name {

}

/* Tags */
tag {
    color: hsl(61, 100%, 80%);
}
tag.name,
tag.php.framework.name {
    color: hsl(46, 65%, 70%);
}
tag.framework {
    color: hsl(280, 30%, 50%);
}
tag.framework.name {
    color: hsl(280, 60%, 70%);
}
tag.attribute.name,
tag.html.attribute.name {
    color: hsl(250, 60%, 75%);
}
tag.framework.attribute.name {
    color: hsl(320, 60%, 70%);
}
tag.attribute.value,
tag.attribute.media {
    color: hsl(270, 80%, 80%);
}
tag.attribute.value.delimiter {
    color: hsl(63, 70%, 60%);
}
tag.attribute.operator {
    color: hsl(300, 100%, 70%);
}
tag.attribute.value.link {
    color: hsl(210, 100%, 70%);
}
tag.go-template {
    color: hsl(270, 80%, 80%);
}
tag.html.name {
    color: hsl(40, 85%, 65%);
}
tag.framework.start,
tag.framework.end {
    color: hsl(61, 100%, 80%);
}

/* Styles */
style.at {
    color: hsl(32, 90%, 70%);
    font-weight: bold;
}
style.selector {
    color: hsl(270, 80%, 80%);
}
style.selector.element {
}
style.selector.identifier.id {
    color: hsl(295, 80%, 80%);
}
style.selector.identifier.class {
    color: hsl(270, 80%, 80%);
}
style.selector.pseudoclass {
    color: hsl(270, 80%, 80%);
}
style.selector.pseudoelement {
    color: hsl(32, 90%, 70%);
}
style.attribute.name {
    color: hsl(290, 100%, 75%);
}
style.attribute.identifier.name {
    color: hsl(290, 90%, 82%);
}
style.value.number {
    color: hsl(48, 70%, 60%);
}
style.value.color.hex {
    color: hsl(7, 50%, 80%);
}
style.value.keyword {
    color: hsl(220, 100%, 77%);
}
style.value.color.named {
    color: hsl(210, 100%, 70%);
}
style.value.identifier.function {
    color: hsl(220, 100%, 85%);
}
css.style.media-feature.keyword,
css.style.media-query-list.feature {
    color: hsl(235, 100%, 80%);
}

toml.markup.bold.name {
    color: hsl(225, 85%, 80%);
}
toml.value.array,
toml.bracket,
yaml.bracket {
    color: hsl(32, 80%, 70%);
}
toml.string,
yaml.string {
    color: hsl(272, 100%, 78%);
}

rust.block,
perl.block,
javascript.block { /* text the syntax doesn't assign to anything */
    color: hsl(270, 60%, 85%);
}
